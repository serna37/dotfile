# =========================================================
# BFS
# - グラフ
# - グリッド
# =========================================================

snippet algo_bfs "bfs" b
// 複数始点BFS
queue<int> q;
vector<int> dis(${1:N}, -1); // dis[v] := 始点からvまでの距離
for (int i = 0; i < ${2:1}; ++i) {
	q.push(${3:0}); // 始点を複数セット
	dis[$3] = 0;
}
while (!q.empty()) {
	int v = q.front();
	q.pop();
	for (auto &&nv : ${4:G}[v]) {
		// 隣接点へ
		if (dis[nv] == -1) {
			dis[nv] = dis[v] + 1;
			q.push(nv);
		}
	}
}
endsnippet

snippet algo_bfs_grid "bfs grid" b
queue<pair<int, int>> q;
vector<vector<int>> dis(${1:H}, vector<int>(${2:W}, -1));
q.push({${3:sy}, ${4:sx}});
dis[$3][$4] = 0;
string alw = "${5:.SG}";
auto cango = [&](char a) { return alw.find(a) != string::npos; };
while (!q.empty()) {
	auto [py, px] = q.front();
	q.pop();
	for (int i = 0; i < 4; ++i) { // 周囲4方向
		int y = py + dy[i], x = px + dx[i];
		if (y < 0 or x < 0 or $1 <= y or $2 <= x) continue;
		if (dis[y][x] == -1 and cango(${6:G}[y][x])) {
			dis[y][x] = dis[py][px] + 1;
			q.push({y, x});
		}
	}
}
endsnippet

