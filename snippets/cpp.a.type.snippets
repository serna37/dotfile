# =========================================================
# type
# =========================================================
snippet ll "long long" bi
long long 
endsnippet
snippet dou "double" bi
double 
endsnippet

snippet vec "vector" bi
vector<${1:int}>
endsnippet
snippet vec2 "vector2" bi
vector<vector<${1:int}>> ${2:G}(${3:N}, vector<$1>(${4:M}, ${5:0}));
endsnippet

snippet st "set" bi
set<${1:int}>
endsnippet
snippet mul "multiset" bi
multiset<${1:int}>
endsnippet
snippet sterase "set (multiset) erase" b
${1:st}.erase($1.find(${2:val}));
endsnippet

snippet mp "map" bi
map<${1:int}, ${2:int}>
endsnippet
snippet mperase "map erase" b
if (--${1:mp}[${2:key}] == 0) $1.erase($2);
endsnippet
snippet uno "unordered_map" bi
unordered_map<${1:int}, ${2:int}>
endsnippet

snippet pp "pair" bi
pair<${1:int}, ${2:int}>
endsnippet
snippet tu "tuple" bi
tuple<${1}>
endsnippet
snippet get "get by tuple" bi
get<${1}>(${2})
endsnippet

snippet sta "stack" bi
stack<${1:int}>
endsnippet
snippet qu "queue" bi
queue<${1:int}>
endsnippet
snippet pri "priority_queue" bi
priority_queue<${1:int}> ${2:q};
endsnippet
snippet pri_pad "priority_queue padding" bi
// emptyなとき$4になるようpadding
priority_queue<${1:int}> ${2:q};
for (int i = 0; i < ${3:N}; ++i) $2.push(${4:0});
endsnippet
snippet pril "priority_queue (less)" bi
priority_queue<${1:int}, vector<$1>, greater<$1>>
endsnippet
snippet deq "deque" bi
deque<${1:char}>
endsnippet

snippet graph_def "graph def" b
using Graph = vector<vector<tuple<int, long long>>>;
Graph ${1:G}(${2:N});
endsnippet
snippet graph_add "graph add" b
${1:G}[${2:i}].push_back({${3:vertex}, ${4:cost}});
endsnippet

