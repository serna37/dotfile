export TOOL_BOX=$(cat << "EOF"
[
    {
        "name": "cpp_exe",
        "cmd": "cpp_exe"
    },
    {
        "name": "localhost",
        "cmd": "dev_tools_python_localhost"
    },
    {
        "name": "venv",
        "cmd": "dev_tools_python_venv"
    },
    {
        "name": "application",
        "cmd": "find /Applications -maxdepth 1 -name '*.app' | fzf | xargs -I {} open '{}'"
    },
    {
        "name": "finder",
        "cmd": "open ."
    },
    {
        "name": "clock",
        "cmd": "_lazy_install tty-clock && tty-clock -sc -C2"
    },
    {
        "name": "devbox-ctrl",
        "cmd": "devbox-ctrl"
    },
    {
        "name": "zoxide-ls",
        "cmd": "zoxide query -ls"
    },
    {
        "name": "zoxide-rm",
        "cmd": "(){zoxide remove $(gum input --prompt \"del: \")}"
    },
    {
        "name": "x86-brew",
        "cmd": "arch -x86_64 /usr/local/bin/brew"
    },
    {
        "name": "cancel",
        "cmd": "info cancel"
    }
]
EOF
)

toolbox() {
    _lazy_install jq
    printf "\e[32m\n"
    echo "                      _  _ ";
    echo "  _                  | || | ";
    echo " | |_    ___    ___  | || | _    ___   _   _ ";
    echo " |  _)  / _ \  / _ \ | || || \  / _ \ ( \ / ) ";
    echo " | |__ | |_| || |_| || || |_) )| |_| | ) X ( ";
    echo "  \___) \___/  \___/ |_||____/  \___/ (_/ \_) ";
    printf "\e[m"
    info "Choose Tool"
    TARGET=$1
    if [ -z "$TARGET" ]; then
        info "Cancel"
        return
    fi
    CMD=$(echo $TOOL_BOX | jq -r ".[] | select(.name == \"$TARGET\") | .cmd")
    confirm $CMD
}
function _toolbox() {
    local -a val
    val=(
        'cpp_exe[ main.cppを実行]'
        'localhost[ Python localhost]'
        'venv[ Python venv]'
        'application[ アプリ起動]'
        'finder[ finder起動]'
        'devbox-ctrl[ dev box container control]'
        'clock[ 時計]'
        'zoxide-ls[ zoxide ls]'
        'zoxide-rm[ zoxide rm]'
        'x86-brew[ arch x86_64 brew]'
        'cancel[cancel]'
    )
    _values '' $val
}
compdef _toolbox toolbox

