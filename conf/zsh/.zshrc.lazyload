# 必要な時にインストールする用

# ===============================
# 開発ツール
# zoxide
function _lazy_install_zoxide() {
    if ! type zoxide > /dev/null 2>&1; then
        brew install zoxide
    fi
}

# eza
function _lazy_install_eza() {
    if ! type eza > /dev/null 2>&1; then
        brew install eza
    fi
}

# fzf
function _lazy_install_fzf() {
    if ! type fzf > /dev/null 2>&1; then
        brew install fzf
    fi
}

# bat
function _lazy_install_bat() {
    if ! type bat > /dev/null 2>&1; then
        brew install bat
    fi
}

# lazygit
function _lazy_install_lazygit() {
    if ! type git > /dev/null 2>&1; then
        brew install git
    fi
    if ! type lazygit > /dev/null 2>&1; then
        brew install lazygit
    fi
}

# lazydocker
function _lazy_install_lazydocker() {
    if ! type lazydocker > /dev/null 2>&1; then
        brew install lazydocker
    fi
}

# gum
function _lazy_install_gum() {
    if ! type gum > /dev/null 2>&1; then
        brew install gum
    fi
}

# yazi
function _lazy_install_yazi() {
    if ! type yazi > /dev/null 2>&1; then
        brew install yazi
    fi
    if [ ! -f ~/.config/yazi/yazi.toml ]; then
        ln -nfs ~/git/dotfiles/conf/config/yazi.toml ~/.config/yazi/yazi.toml
    fi
}

# veeso/termscp/termscp
function _lazy_install_termscp() {
    if ! type termscp > /dev/null 2>&1; then
        brew install veeso/termscp/termscp
    fi
}

# tako8ki/tap/gobang
function _lazy_install_gobang() {
    if ! type gobang > /dev/null 2>&1; then
        brew install tako8ki/tap/gobang
    fi
    if [ ! -f ~/.config/gobang/config.toml ]; then
        ln -nfs ~/git/dotfiles/conf/config/gpbang/config.toml ~/.config/gobang/config.toml
    fi
}

# ffmpeg
function _lazy_install_ffmpeg() {
    if ! type ffmpeg > /dev/null 2>&1; then
        brew install ffmpeg
    fi
}

# fastfetch
function _lazy_install_fastfetch() {
    if ! type fastfetch > /dev/null 2>&1; then
        brew install fastfetch
    fi
}

# screenfetch
function _lazy_install_screenfetch() {
    if ! type screenfetch > /dev/null 2>&1; then
        brew install screenfetch
    fi
}

# ripgrep
function _lazy_install_ripgrep() {
    if ! type rg > /dev/null 2>&1; then
        brew install ripgrep
    fi
}

# silicon
function _lazy_install_silicon() {
    if ! type silicon > /dev/null 2>&1; then
        brew install silicon
    fi
}

# code-minimap
function _lazy_install_code_minimap() {
    if ! type code-minimap > /dev/null 2>&1; then
        brew install code-minimap
    fi
}

# others
function _lazy_install_others() {
    # developer tools
    # jq
    if ! type jq > /dev/null 2>&1; then
        brew install jq
    fi

    # make me happy
    # genact
    if ! type genact > /dev/null 2>&1; then
        brew install genact
    fi
    # tty-clock
    if ! type tty-clock > /dev/null 2>&1; then
        brew install tty-clock
    fi
    # cmatrix
    if ! type cmatrix > /dev/null 2>&1; then
        brew install cmatrix
    fi
}

# ===============================
# prompt系
function _lazy_install_zsh_syntax_highlighting() {
    if [ ! -f /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
        brew install zsh-syntax-highlighting
    fi
}

function _lazy_install_zsh_autosuggestions() {
    if [ ! -f /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
        brew install zsh-autosuggestions
    fi
}

function _lazy_install_p10k() {
    if [ ! -f /opt/homebrew/opt/powerlevel10k/share/powerlevel10k/powerlevel10k.zsh-theme ]; then
        brew install powerlevel10k
    fi
}

function _lazy_install_zsh_git_prompt() {
    if [ ! -f /opt/homebrew/opt/zsh-git-prompt/zshrc.sh ]; then
        brew install zsh-git-prompt
    fi
}

# ===============================
# 言語系
function _lazy_install_llvm() {
    if [ ! -d /opt/homebrew/opt/llvm ]; then
        brew install llvm
    fi
}

function _lazy_install_python() {
    if [ ! -f /opt/homebrew/bin/python3 ]; then
        brew install python3
    fi
}

function _lazy_install_nvm() {
    if ! type nvm > /dev/null 2>&1; then
        if [ ! -d $HOME/.nvm ]; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash
            nvm install stable --latest-npm
            nvm alias default stable
        fi
    fi
}

