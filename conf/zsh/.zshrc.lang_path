if [ "$(uname)" = "Darwin" ]; then
    # brew
    export PATH="$PATH:/opt/homebrew/bin/"

    # Python
    _lazy_install_python
    export PATH="$PATH:/opt/homebrew/bin/python3"
    alias python='python3'
    alias pip='python -m pip'

    # nvm
    _lazy_install_nvm
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

    # Rust
    #export PATH="$PATH:$CARGO_HOME/bin"

    # Go
    #export PATH="$PATH:$HOME/work/go/bin"

    # Java
    #PATH="/opt/homebrew/opt/openjdk@11/bin:$PATH"
    #export JAVA_HOME=`/usr/libexec/java_home -v 11`
fi

if [ "$(uname)" = "Linux" ]; then
    export SHELL=/bin/zsh
    export PATH="$PATH:$HOME/.local/bin"
    alias python='python3'
fi

# C++ビルドコマンド
# AtCoderでの指定: https://atcoder.jp/contests/APG4b/rules?lang=ja
# -std=c++20 バージョン指定
# -I includeパス
# -Wall 警告オプションまとめ
# -Wextra その他の警告オプションまとめ
# -mtune=native マシン最適化
# -march=native マシン最適化
# -fconstexpr-depth=2147483647 コンパイル時の再帰回数
export CPP_BUILD_CMD="g++ -std=c++20 \
-I $HOME/git/dotfiles/conf/cpp \
-Wall \
-Wextra \
-mtune=native \
-march=native \
-fconstexpr-depth=2147483647 \
-o "

# -ftrapv 符号あり整数計算でover under flow
# -fsanitize-undefined-trap-on-error 未定義サニタイザ
# -fsanitize=address アドレスサニタイザ
export CPP_BUILD_CMD_SANITIZE="g++ -std=c++20 \
-I $HOME/git/dotfiles/conf/cpp \
-Wall \
-Wextra \
-mtune=native \
-march=native \
-fconstexpr-depth=2147483647 \
-ftrapv \
-fsanitize-undefined-trap-on-error \
-fsanitize=address \
-o "

